const Login = require('./login')
const WAC = require('./wac')

class DBQuery {
  constructor(run) {
    this.run = run
    this.skipExp = 0
    this.orderByExp = []
    this.whereExp = {}
  }

  skip(s) {
    this.skipExp = s
    return this
  }

  limit(lim) {
    this.limitExp = lim
    return this
  }

  orderBy(key, order) {
    this.orderByExp.push([key, order])
    return this
  }

  where(w) {
    this.whereExp = w
    return this
  }

  field(f) {
    this.fieldExp = f
    return this
  }

  get(success, fail) {
    this.run(this, success, fail)
  }
}

class DataSet {
    constructor(id, items, cloudTableName = undefined) {
        this.id = id
        this.cloudTableName = cloudTableName
        this.observers = []
        this.items = items

        if (typeof this.cloudTableName === 'string') {
            this.loadLatestCloudDaya()
        }
    }


    set items(itemArr) {
      const that = this
      const arrayHandler = {
        get: function(target, property) {
          return target[property]
        },
        set: function(target, property, value) {
          target[property] = value
          that.notify()
          return true
        }
      }
      this.__items__ = new Proxy(itemArr, arrayHandler)
      that.notify()
    }
    
    get items() {
      return this.__items__
    }

    addItem(item, success, fail) {
        if (typeof this.cloudTableName === 'string') {
            const that = this
            const db = wx.cloud.database()
            db.collection(this.cloudTableName).add({
                data: item,
                success: res => {
                    db.collection(that.cloudTableName).doc(res._id).get({
                      success: res => {
                        that.items.push(res.data)
                        that.notify()
                        WAC.safeCall(success)(res.data)
                      },
                      fail: err => {
                        WAC.safeCall(fail)(err)
                      }
                    })                
                },
                fail: err => {
                    WAC.safeCall(fail)(err)
                }
            })
        } else {
          this.items.push(item)
          this.notify()
          WAC.safeCall(success)(item)
        }
    }

    removeItem(idx, success, fail) {
      const that = this
      if (idx < this.items.length) {
          var removed = this.items.splice(idx, 1);
          that.notify()
          if (typeof this.cloudTableName === 'string') {
              const collection = wx.cloud.database().collection(that.cloudTableName)
              removed.forEach(function(r) {
                  if (r._id) {
                    collection.doc(r._id).remove({
                                                success: res => {
                                                  WAC.safeCall(success)(removed)
                                                },
                                                fail: err => {
                                                  WAC.safeCall(fail)(err)
                                                }
                                              })
                  }
              })
              
          } 
          else {
            WAC.safeCall(success)(removed)
          }
          
      }
        
    }

    updateItem(idx, data, success, fail) {
        if (idx < this.items.length) {
            var item = this.items[idx]
            for (var k in data) {
                if (data.hasOwnProperty(k) && item.hasOwnProperty(k)) {
                    item[k] = data[k]
                }
            }
            this.items[k] = item
            this.notify()
            
            if (typeof this.cloudTableName === 'string' && item._id) {
                var that = this
                const collection = wx.cloud.database().collection(that.cloudTableName)
                if (item._id) {
                  collection.doc(item._id).update({
                                                  data:data,
                                                  success:WAC.safeCall(success),
                                                  error: WAC.safeCall(fail)
                                                })
                }
            
            }
            
        }
    }
    

    subscribe(key, f) {
        this.observers.push({ key, f });
    }

    unsubscribe(key) {
        this.observers = this.observers.filter(subscriber => subscriber.key !== key);
    }

    notify() {
        this.observers.forEach(observer => observer.f(this))
    }

    loadLatestCloudDaya() {
        let that = this;
        const db = wx.cloud.database();
        return db
          .collection(that.cloudTableName)
          .get()
          .then(res => {
            if (Array.isArray(res.data) && res.data.length > 0) {
              that.items.push(...res.data);
              that.notify();
            }
          })
          .catch(err => {});
    }

    search(findItem){
      if (findItem == undefined) return this.items;
      if (Object.keys(findItem).length == 0) return this.items;
      let result = []
      for (var i = this.items.length - 1; i >= 0; i--) {
        let item = this.items[i]
        let fit = true
        let keys = Object.keys(findItem)
        for (var j = 0; j < keys.length; j++){
          let key = keys[j]
          if (item[key] !== findItem[key] || item[key] == undefined){
            fit = false
          }
        }
        if (fit){
          result.push(item)
        }
      }
      return result
    }

    get myItems() {
      const that = this

      function run(query, success, fail) {
        if (!that.cloudTableName) {
          if (fail && typeof fail === 'function') {
            fail(new Error('数据表未开启云同步'))
          }
          return
        }
        const db = wx.cloud.database()
        const MAX_LIMIT = 20
        const batchTimes = Math.ceil((query.limitExp || 20) / MAX_LIMIT)
        const tasks = []
        for (let i = 0; i < batchTimes; ++i) {
          let task = db.collection(that.cloudTableName).where(query.whereExp)
          for (let order of query.orderByExp) {
            task = task.orderBy(...order)
          }
          if (query.fieldExp) {
            task = task.field(query.fieldExp)
          }
          task = task.skip(query.skipExp +  i * MAX_LIMIT)
          .limit(MAX_LIMIT)
          .get()
          tasks.push(task)
        }
        
        Promise.all(tasks).then(vals => {
          const data = vals.reduce((acc, cur) => {
            return acc.concat(cur.data || [])
          }, [])

          if (success && typeof success === 'function') {
            success(data)
          }
        }).catch(err => {
          if (fail && typeof fail === 'function') {
            fail(err)
          }
        })
      }

      return new DBQuery(run)
    }

    get allUserItems() {
    
    const that = this

    function run(query, success, fail) {
      if (!that.cloudTableName) {
        if (fail && typeof fail === 'function') {
          fail(new Error('数据表未开启云同步'))
        }
        return
      }
        const db = wx.cloud.database()
        const MAX_LIMIT = 100
        const batchTimes = Math.ceil((query.limitExp || 100) / MAX_LIMIT)
        const tasks = []
        for (let i = 0; i < batchTimes; ++i) {
          const data = {
            collection: that.cloudTableName,
            skip: query.skipExp + i * MAX_LIMIT,
            limit: MAX_LIMIT,
            orderBy: query.orderByExp,
            where: query.whereExp
          }

          if (query.fieldExp) {
            data.field = query.fieldExp
          }
          const task = wx.cloud.callFunction({
            name:"mmbizwxaipad_getItem",
            data
          })
          tasks.push(task)
        }
        
        Promise.all(tasks).then(vals => {
          const data = vals.reduce((acc, cur) => {
            return acc.concat(cur.result.data || [])
          }, [])

          if (success && typeof success === 'function') {
            success(data)
          }
        }).catch(err => {
          if (fail && typeof fail === 'function') {
            fail(err)
          }
        })
    }

    return new DBQuery(run)
  }

}
function wrapReactive(obj) {
    function Dep() {
      this.subs = [];
    }
    Dep.prototype = {
      addSub(sub) {
        this.subs.push(sub);
      },
      notify() {
        this.subs.forEach(sub => {
          sub.update();
        })
      },
      removeSub(sub) {
        this.subs = this.subs.filter((item) => item.key != sub.key)
      }
    }
  
    let deps = {}
  
    for (let key in obj) {
      if (obj.hasOwnProperty(key)) {
        deps[key] = new Dep()
      }
    }
  
    let proxy = new Proxy(obj, {
      set: function(target, key, value) {
          obj[key] = value
          if (deps[key]) {
            deps[key].notify()
          }
          return true
      },
      get: function(target, key) {
        if (WAC.isPlainObject(obj[key])) {
          return new Proxy(obj[key], {
            get: function(target, key) {
              return target[key]
            },
            set: function(target, k, value) {
              target[k] = value
              if (deps[key]) {
                deps[key].notify()
              }
              return true
            }
          })
        } else {
          return obj[key]
        }
      }
    })
  
    proxy.__sub__ = function sub(data, key, cb) {
        deps[data].addSub({ update: cb , key: key})
        cb()
    }
    
    proxy.__unsub__ = function unsub(data, key) {
        deps[data].removeSub({key})
    }
  
    return proxy
  }
let __variable__ ={};
let dataset1 = new DataSet("dataset1", [{"省编高中学号(学籍系统)":"1303010120016","完成要求":"补充、核对红色内容栏，毕业证只发一次，请同学们认真填写及核对 。","性别":"女","姓名":"叶倚桐","序号":1,"籍贯1 (省)":"广东","出生年月日":"1998-07-20","班级":14,"籍贯2  (市)":"汕头","身份证号码":"440301199807208220","学  号  (学籍系统)":"2013530016","籍贯3  (县)":""},{"省编高中学号(学籍系统)":"1303010110022","完成要求":"直接在上面更改，用红色标注","性别":"男","姓名":"何啸林","序号":2,"籍贯1 (省)":"广东","出生年月日":"1998-08-10","班级":14,"籍贯2  (市)":"揭阳","身份证号码":"440301199808102110","学  号  (学籍系统)":"2013530022","籍贯3  (县)":""},{"省编高中学号(学籍系统)":"1303010120039","完成要求":"籍贯1是指祖籍是什么省      如：广东","性别":"女","姓名":"吴嘉怡","序号":3,"籍贯1 (省)":"广东","出生年月日":"1998-10-18","班级":14,"籍贯2  (市)":"汕头","身份证号码":"44142219981018482X","学  号  (学籍系统)":"2013530039","籍贯3  (县)":""},{"省编高中学号(学籍系统)":"1303010110051","完成要求":"籍贯2是指祖籍是什么市      如：深圳","性别":"男","姓名":"吴韦霖","序号":4,"籍贯1 (省)":"广东","出生年月日":"1998-08-12","班级":14,"籍贯2  (市)":"梅州","身份证号码":"440301199808121610","学  号  (学籍系统)":"2013530051","籍贯3  (县)":""},{"省编高中学号(学籍系统)":"1303010120069","完成要求":"籍贯3是指祖籍是什么区（县）如：罗湖","性别":"女","姓名":"张钰祺","序号":5,"籍贯1 (省)":"河北","出生年月日":"1998-02-06","班级":14,"籍贯2  (市)":"邯郸","身份证号码":"440301199802063026","学  号  (学籍系统)":"2013530069","籍贯3  (县)":""},{"省编高中学号(学籍系统)":"1303010120076","完成要求":"名单上没名的学生，请回学籍所在地填写。不是本班学生请告知我。谢谢","性别":"女","姓名":"王婷婷","序号":6,"籍贯1 (省)":"福建","出生年月日":"1996-09-18","班级":14,"籍贯2  (市)":"福州","身份证号码":"350181199609181804","学  号  (学籍系统)":"2013530076","籍贯3  (县)":""},{"省编高中学号(学籍系统)":"1303010120095","完成要求":"复读学生不用填写。","性别":"女","姓名":"任雨晴","序号":7,"籍贯1 (省)":"安徽","出生年月日":"1998-09-15","班级":14,"籍贯2  (市)":"合肥","身份证号码":"342425199809150426","学  号  (学籍系统)":"2013530095","籍贯3  (县)":""},{"省编高中学号(学籍系统)":"1303010120098","完成要求":"名单顺序不要改变。","性别":"女","姓名":"黄倩怡","序号":8,"籍贯1 (省)":"广东","出生年月日":"1998-08-11","班级":14,"籍贯2  (市)":"河源","身份证号码":"440307199808112325","学  号  (学籍系统)":"2013530098","籍贯3  (县)":""},{"省编高中学号(学籍系统)":"1303010120100","完成要求":"传媒，美术的学生回原班填写信息，因学籍库里没有传媒班。","性别":"女","姓名":"李文娴","序号":9,"籍贯1 (省)":"广东","出生年月日":"1997-05-29","班级":14,"籍贯2  (市)":"梅州","身份证号码":"44142419970529160X","学  号  (学籍系统)":"2013530100","籍贯3  (县)":""},{"省编高中学号(学籍系统)":"1303010120101","完成要求":"3月18日前完成发回","性别":"女","姓名":"王文芳","序号":10,"籍贯1 (省)":"广东","出生年月日":"1999-01-05","班级":14,"籍贯2  (市)":"深圳","身份证号码":"360727199901050023","学  号  (学籍系统)":"2013530101","籍贯3  (县)":""},{"省编高中学号(学籍系统)":"1303010120181","完成要求":"","性别":"女","姓名":"喻岚樾","序号":11,"籍贯1 (省)":"湖北","出生年月日":"1999-03-29","班级":14,"籍贯2  (市)":"武汉","身份证号码":"420502199903298928","学  号  (学籍系统)":"2013530181","籍贯3  (县)":""},{"姓名":"周梓恩","省编高中学号(学籍系统)":"1303010120201","序号":12,"籍贯2  (市)":"深圳","出生年月日":"1998-03-14","籍贯3  (县)":"","学  号  (学籍系统)":"2013530201","籍贯1 (省)":"广东","班级":14,"身份证号码":"445281199803140047","性别":"女"},{"姓名":"梁思雅","省编高中学号(学籍系统)":"1303010120207","序号":13,"籍贯2  (市)":"深圳","出生年月日":"1997-12-25","籍贯3  (县)":"","学  号  (学籍系统)":"2013530207","籍贯1 (省)":"广东","班级":14,"身份证号码":"440303199712252029","性别":"女"},{"姓名":"欧旖晴","省编高中学号(学籍系统)":"1303010120266","序号":14,"籍贯2  (市)":"深圳","出生年月日":"1997-12-09","性别":"女","学  号  (学籍系统)":"2013530266","籍贯1 (省)":"广东","班级":14,"身份证号码":"440301199712090928","籍贯3  (县)":""},{"姓名":"汤琪","省编高中学号(学籍系统)":"1303010120269","序号":15,"籍贯2  (市)":"深圳","出生年月日":"1998-10-16","性别":"女","学  号  (学籍系统)":"2013530269","籍贯1 (省)":"广东","班级":14,"身份证号码":"362430199810160060","籍贯3  (县)":""},{"姓名":"王佩佩","省编高中学号(学籍系统)":"1303010120283","序号":16,"籍贯2  (市)":"邵阳","出生年月日":"1998-12-14","籍贯3  (县)":"","学  号  (学籍系统)":"2013530283","籍贯1 (省)":"湖南","班级":14,"身份证号码":"430521199812148749","性别":"女"},{"姓名":"郑凯茵","省编高中学号(学籍系统)":"1303010120287","序号":17,"籍贯2  (市)":"汕尾","出生年月日":"1998-04-09","性别":"女","学  号  (学籍系统)":"2013530287","籍贯1 (省)":"广东","班级":14,"身份证号码":"441522199804098621","籍贯3  (县)":""},{"姓名":"莫蕙羽","省编高中学号(学籍系统)":"1303010120291","序号":18,"籍贯2  (市)":"深圳","出生年月日":"1998-01-11","籍贯3  (县)":"","性别":"女","籍贯1 (省)":"广东","班级":14,"身份证号码":"440301199801111321","学  号  (学籍系统)":"2013530291"},{"姓名":"林泽鹏","省编高中学号(学籍系统)":"1303010110297","序号":19,"籍贯2  (市)":"汕尾","出生年月日":"1998-03-12","籍贯3  (县)":"","性别":"男","籍贯1 (省)":"广东","班级":14,"身份证号码":"441581199803120030","学  号  (学籍系统)":"2013530297"},{"姓名":"李沛然","省编高中学号(学籍系统)":"1303010120307","序号":20,"籍贯2  (市)":"深圳","出生年月日":"1998-03-02","籍贯3  (县)":"","学  号  (学籍系统)":"2013530307","性别":"女","班级":14,"身份证号码":"440301199803022728","籍贯1 (省)":"广东"},{"姓名":"罗籽晴","省编高中学号(学籍系统)":"1303010120326","序号":21,"籍贯2  (市)":"肇庆","出生年月日":"1998-01-04","籍贯3  (县)":"","性别":"女","籍贯1 (省)":"广东","班级":14,"身份证号码":"441322199801042728","学  号  (学籍系统)":"2013530326"},{"姓名":"卢韦岐","省编高中学号(学籍系统)":"1303010120336","序号":22,"籍贯2  (市)":"佛山","出生年月日":"1998-02-14","籍贯3  (县)":"","学  号  (学籍系统)":"2013530336","籍贯1 (省)":"广东","班级":14,"性别":"女","身份证号码":"440301199802142322"},{"姓名":"彭及思","省编高中学号(学籍系统)":"1303010120374","序号":23,"籍贯2  (市)":"汕尾","出生年月日":"1998-07-31","籍贯3  (县)":"","学  号  (学籍系统)":"2013530374","籍贯1 (省)":"广东","班级":14,"性别":"女","身份证号码":"441523199807317363"},{"姓名":"陈柏润","省编高中学号(学籍系统)":"1303010110384","序号":24,"籍贯2  (市)":"揭阳","出生年月日":"1998-05-24","籍贯3  (县)":"","学  号  (学籍系统)":"2013530384","性别":"男","班级":14,"身份证号码":"440303199805244810","籍贯1 (省)":"广东"},{"姓名":"金栩辉","省编高中学号(学籍系统)":"1303010110395","序号":25,"籍贯2  (市)":"台州","出生年月日":"1998-01-06","籍贯3  (县)":"","学  号  (学籍系统)":"2013530395","籍贯1 (省)":"浙江","班级":14,"性别":"男","身份证号码":"331082199801069191"},{"姓名":"马千越","省编高中学号(学籍系统)":"1303010110406","序号":26,"籍贯2  (市)":"咸宁","出生年月日":"1998-06-12","籍贯3  (县)":"","学  号  (学籍系统)":"2013530406","籍贯1 (省)":"湖北","班级":14,"性别":"男","身份证号码":"421281199806124918"},{"姓名":"陈邕政","省编高中学号(学籍系统)":"1303010110411","序号":27,"籍贯2  (市)":"崇左","出生年月日":"1999-01-06","籍贯3  (县)":"","学  号  (学籍系统)":"2013530411","性别":"男","班级":14,"身份证号码":"452132199901061816","籍贯1 (省)":"广西"},{"姓名":"叶彤","序号":28,"省编高中学号(学籍系统)":"1303010120428","籍贯2  (市)":"汕尾","出生年月日":"1998-09-13","性别":"女","学  号  (学籍系统)":"2013530428","籍贯1 (省)":"广东","班级":14,"身份证号码":"441521199809138841","籍贯3  (县)":""},{"姓名":"卢亿乔","序号":29,"省编高中学号(学籍系统)":"1303010120458","籍贯2  (市)":"惠州","出生年月日":"1998-08-06","性别":"女","学  号  (学籍系统)":"2013530458","籍贯1 (省)":"广东","班级":14,"身份证号码":"441322199808061120","籍贯3  (县)":""},{"姓名":"李泽欢","序号":30,"省编高中学号(学籍系统)":"1303010120470","籍贯2  (市)":"深圳","出生年月日":"1998-06-28","性别":"女","学  号  (学籍系统)":"2013530470","籍贯1 (省)":"广东","班级":14,"身份证号码":"441625199806287682","籍贯3  (县)":""},{"姓名":"唐辉婵","序号":31,"省编高中学号(学籍系统)":"1303010120475","籍贯2  (市)":"揭阳","出生年月日":"1997-01-13","性别":"女","学  号  (学籍系统)":"2013530475","籍贯1 (省)":"广东","班级":14,"身份证号码":"445224199701133025","籍贯3  (县)":""},{"姓名":"梁君珺","序号":32,"省编高中学号(学籍系统)":"1303010120508","籍贯2  (市)":"肇庆","出生年月日":"1997-03-20","性别":"女","学  号  (学籍系统)":"2013530508","籍贯1 (省)":"广东","班级":14,"身份证号码":"441223199703206224","籍贯3  (县)":""},{"姓名":"叶斯哲","序号":33,"省编高中学号(学籍系统)":"1303010110509","籍贯2  (市)":"惠州","出生年月日":"1998-08-28","性别":"男","学  号  (学籍系统)":"2013530509","籍贯1 (省)":"广东","班级":14,"身份证号码":"440803199808283951","籍贯3  (县)":""},{"姓名":"林泽惠","序号":34,"省编高中学号(学籍系统)":"1303010120521","籍贯2  (市)":"揭阳","出生年月日":"1997-07-30","性别":"女","学  号  (学籍系统)":"2013530521","籍贯1 (省)":"广东","班级":14,"身份证号码":"445281199707303088","籍贯3  (县)":""},{"姓名":"罗雅瑜","序号":35,"省编高中学号(学籍系统)":"1303010120577","籍贯2  (市)":"揭阳","出生年月日":"1998-09-21","性别":"女","学  号  (学籍系统)":"2013530577","籍贯1 (省)":"广东","班级":14,"身份证号码":"44030619980921102X","籍贯3  (县)":""},{"姓名":"顾珊珊","序号":36,"省编高中学号(学籍系统)":"1303010120587","籍贯2  (市)":"河源","出生年月日":"1998-08-19","性别":"女","学  号  (学籍系统)":"2013530587","籍贯1 (省)":"广东","班级":14,"身份证号码":"440301199808192726","籍贯3  (县)":""},{"姓名":"何舟映","序号":37,"省编高中学号(学籍系统)":"1303010120611","籍贯2  (市)":"岳阳","出生年月日":"1998-05-12","性别":"女","学  号  (学籍系统)":"2013530611","籍贯1 (省)":"湖南","班级":14,"身份证号码":"43062419980512572X","籍贯3  (县)":""},{"姓名":"彭贤良","序号":38,"省编高中学号(学籍系统)":"1303010110614","籍贯2  (市)":"吉安","出生年月日":"1997-11-27","性别":"男","学  号  (学籍系统)":"2013530614","籍贯1 (省)":"江西","班级":14,"身份证号码":"362426199711270032","籍贯3  (县)":""},{"姓名":"高鑫鑫","序号":39,"省编高中学号(学籍系统)":"1303010110619","籍贯2  (市)":"漯河","出生年月日":"1998-06-16","性别":"男","学  号  (学籍系统)":"2013530619","籍贯1 (省)":"河南","班级":14,"身份证号码":"411102199806160131","籍贯3  (县)":""},{"姓名":"刘嘉睿","序号":40,"省编高中学号(学籍系统)":"1303010110632","籍贯2  (市)":"广州","出生年月日":"1998-06-05","性别":"男","学  号  (学籍系统)":"2013530632","籍贯1 (省)":"广东","班级":14,"身份证号码":"440303199806058518","籍贯3  (县)":""},{"姓名":"黄思源","序号":41,"省编高中学号(学籍系统)":"1303010110648","籍贯2  (市)":"梅州","出生年月日":"1998-07-05","性别":"男","学  号  (学籍系统)":"2013530648","籍贯1 (省)":"广东","班级":14,"身份证号码":"440301199807051112","籍贯3  (县)":""},{"姓名":"卓翠李","序号":42,"省编高中学号(学籍系统)":"1303010120653","籍贯2  (市)":"汕尾","出生年月日":"1997-09-13","性别":"女","学  号  (学籍系统)":"2013530653","籍贯1 (省)":"广东","班级":14,"身份证号码":"441522199709133361","籍贯3  (县)":""},{"姓名":"余瑞华","序号":43,"省编高中学号(学籍系统)":"1303010110661","籍贯2  (市)":"深圳","出生年月日":"1998-01-18","性别":"男","学  号  (学籍系统)":"2013530661","籍贯1 (省)":"广东","班级":14,"身份证号码":"441502199801182312","籍贯3  (县)":""},{"姓名":"王成昊","序号":44,"省编高中学号(学籍系统)":"1303010110720","籍贯2  (市)":"镇江","出生年月日":"1998-10-05","性别":"男","学  号  (学籍系统)":"2013530720","籍贯1 (省)":"江苏","班级":14,"身份证号码":"440301199810053119","籍贯3  (县)":""},{"姓名":"朱静宜","序号":45,"省编高中学号(学籍系统)":"1303010120756","籍贯2  (市)":"深圳","出生年月日":"1998-01-04","性别":"女","学  号  (学籍系统)":"2013530756","籍贯1 (省)":"广东","班级":14,"身份证号码":"440301199801045424","籍贯3  (县)":""},{"姓名":"陈达成","序号":46,"省编高中学号(学籍系统)":"1303010110774","籍贯2  (市)":"汕尾","出生年月日":"1998-03-19","性别":"男","学  号  (学籍系统)":"2013530774","籍贯1 (省)":"广东","班级":14,"身份证号码":"441581199803195112","籍贯3  (县)":""},{"姓名":"陈卓君","序号":47,"省编高中学号(学籍系统)":"1303010120788","籍贯2  (市)":"深圳","出生年月日":"1996-02-28","性别":"女","学  号  (学籍系统)":"2013530788","籍贯1 (省)":"广东","班级":14,"身份证号码":"445224199602280329","籍贯3  (县)":""},{"姓名":"刘煜晨","序号":48,"省编高中学号(学籍系统)":"1303010110801","籍贯2  (市)":"武汉","出生年月日":"1997-10-18","性别":"男","学  号  (学籍系统)":"2013530801","籍贯1 (省)":"湖北","班级":14,"身份证号码":"44030519971018861X","籍贯3  (县)":""},{"姓名":"郑雪花","序号":49,"省编高中学号(学籍系统)":"1303010120804","籍贯2  (市)":"汕尾","出生年月日":"1997-11-09","性别":"女","学  号  (学籍系统)":"2013530804","籍贯1 (省)":"广东","班级":14,"身份证号码":"441581199711095720","籍贯3  (县)":""},{"姓名":"许霓","序号":50,"省编高中学号(学籍系统)":"1303010120813","籍贯2  (市)":"深圳","出生年月日":"1998-01-09","性别":"女","学  号  (学籍系统)":"2013530813","籍贯1 (省)":"广东","班级":14,"身份证号码":"440301199801097267","籍贯3  (县)":""},{"姓名":"余沐宏","序号":51,"省编高中学号(学籍系统)":"1303010120814","籍贯2  (市)":"内江","出生年月日":"1998-02-20","性别":"女","学  号  (学籍系统)":"2013530814","籍贯1 (省)":"四川","班级":14,"身份证号码":"511024199802200024","籍贯3  (县)":""},{"姓名":"王家新","序号":52,"省编高中学号(学籍系统)":"1303010120850","籍贯2  (市)":"烟台","出生年月日":"1999-06-23","性别":"女","学  号  (学籍系统)":"2013530850","籍贯1 (省)":"山东","班级":14,"身份证号码":"230107199906232224","籍贯3  (县)":""},{"姓名":"余锦熙","序号":53,"省编高中学号(学籍系统)":"1303010120874","籍贯2  (市)":"潮州","出生年月日":"1998-05-22","性别":"女","学  号  (学籍系统)":"2013530874","籍贯1 (省)":"广东","班级":14,"身份证号码":"445122199805227482","籍贯3  (县)":""}] );
let user = new DataSet("user", [] );
let answer = new DataSet("answer", [] );
let question = new DataSet("question", [] );
__variable__ = wrapReactive({

})
__variable__.dataset1 = dataset1
__variable__.user = user
__variable__.answer = answer
__variable__.question = question

module.exports = __variable__